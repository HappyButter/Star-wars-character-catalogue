{"version":3,"sources":["views/CharactersCatalogue/CharactersCatalogue.js"],"names":["CharacterList","lazy","SearchBar","CharactersCatalogue","useState","searchQuery","setSearchQuery","pageNumber","setPageNumber","filmList","setFilmList","mapFilm","filmData","characterIdList","characters","forEach","characterLink","push","match","map","Number","title","id","episode_id","director","producer","releaseDate","release_date","url","getFilmList","a","axios","data","filmsMapped","results","console","log","message","useEffect","fallback"],"mappings":"oQAQMA,EAAgBC,gBAAK,kBAAM,gCAC3BC,EAAYD,gBAAK,kBAAM,sDAwDdE,EAtDa,WAAO,IAAD,EACMC,mBAAS,IADf,mBACzBC,EADyB,KACZC,EADY,OAEIF,mBAAS,GAFb,mBAEzBG,EAFyB,KAEbC,EAFa,OAGAJ,mBAAS,IAHT,mBAGzBK,EAHyB,KAGfC,EAHe,KAK1BC,EAAU,SAACC,GACf,IAAIC,EAAkB,GAMtB,OAJAD,EAASE,WAAWC,SAAQ,SAACC,GAAD,OAC1BH,EAAgBI,KAAKD,EAAcE,MAAM,QAAQC,IAAIC,YAGhD,CACLC,MAAOT,EAASS,MAChBC,GAAIV,EAASW,WACbC,SAAUZ,EAASY,SACnBC,SAAUb,EAASa,SACnBC,YAAad,EAASe,aACtBC,IAAKhB,EAASgB,IACdf,oBAIEgB,EAAW,uCAAG,gCAAAC,EAAA,+EAEOC,IAAM,gCAFb,gBAERC,EAFQ,EAERA,KAEFC,EAAcD,EAAKE,QAAQf,IAAIR,GACrCD,EAAYuB,GALI,gDAOhBE,QAAQC,IAAI,KAAEC,SAPE,yDAAH,qDAejB,OAJAC,qBAAU,WACRT,MACC,IAGD,eAAC,WAAD,CAAUU,SAAU,cAAC,IAAD,IAApB,UACE,cAACrC,EAAD,CACEI,eAAgBA,EAChBE,cAAeA,IAEjB,cAACR,EAAD,CACEK,YAAaA,EACbE,WAAYA,EACZC,cAAeA,EACfC,SAAUA","file":"static/js/7.179df662.chunk.js","sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from 'react';\r\nimport axios from 'axios';\r\nimport { Loader } from 'components';\r\n\r\n// import { CharacterList } from './components/CharacterList';\r\n// import { SearchBar } from './components/SearchBar';\r\n\r\n\r\nconst CharacterList = lazy(() => import('./components/CharacterList'));\r\nconst SearchBar = lazy(() => import('./components/SearchBar'));\r\n\r\nconst CharactersCatalogue = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [filmList, setFilmList] = useState([]);\r\n\r\n  const mapFilm = (filmData) => {\r\n    let characterIdList = [];\r\n\r\n    filmData.characters.forEach((characterLink) =>\r\n      characterIdList.push(characterLink.match(/\\d+/g).map(Number))\r\n    );\r\n\r\n    return {\r\n      title: filmData.title,\r\n      id: filmData.episode_id,\r\n      director: filmData.director,\r\n      producer: filmData.producer,\r\n      releaseDate: filmData.release_date,\r\n      url: filmData.url,\r\n      characterIdList,\r\n    };\r\n  };\r\n\r\n  const getFilmList = async () => {\r\n    try {\r\n      const { data } = await axios('https://swapi.dev/api/films/');\r\n\r\n      const filmsMapped = data.results.map(mapFilm);\r\n      setFilmList(filmsMapped);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFilmList();\r\n  }, []);\r\n\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <SearchBar\r\n        setSearchQuery={setSearchQuery}\r\n        setPageNumber={setPageNumber}\r\n      />\r\n      <CharacterList\r\n        searchQuery={searchQuery}\r\n        pageNumber={pageNumber}\r\n        setPageNumber={setPageNumber}\r\n        filmList={filmList}\r\n      />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default CharactersCatalogue;\r\n"],"sourceRoot":""}