{"version":3,"sources":["views/CharactersCatalogue/components/CharacterList/characterListElement.css.js","views/CharactersCatalogue/components/CharacterList/CharacterListElement.js","views/CharactersCatalogue/components/CharacterList/characterList.css.js","views/CharactersCatalogue/components/Modal/modal.css.js","views/CharactersCatalogue/components/Modal/Modal.js","views/CharactersCatalogue/components/CharacterDetails/characterDetails.css.js","views/CharactersCatalogue/components/CharacterDetails/CharacterDetails.js","views/CharactersCatalogue/components/CharacterList/CharacterList.js","views/CharactersCatalogue/components/SearchBar/searchBar.css.js","views/CharactersCatalogue/components/SearchBar/SearchBar.js","views/CharactersCatalogue/CharactersCatalogue.js"],"names":["ElementBox","styled","div","CustomLink","Link","CharacterListElement","characterData","style","color","name","gender","birthYear","to","index","ListWrapper","ModalWrapper","ModalContent","ModalHeader","header","Line","ExitIcon","Modal","children","history","useHistory","handleCloseModal","e","stopPropagation","goBack","createPortal","onClick","backgroundColor","padding","border","background","document","getElementById","CharacterDetailsWrapper","CharacterDetails","characters","allFilmList","useParams","useMemo","find","character","Number","movieList","filmList","map","characterFilmURL","film","url","height","eyeColor","hairColor","skinColor","movie","title","CharacterList","searchQuery","pageNumber","setPageNumber","useState","setCharacters","hasMoreCharacters","setHasMoreCharacters","mapCharacter","birth_year","eye_color","hair_color","skin_color","films","length","getMoreCharacters","nextPage","query","a","axios","get","params","search","page","data","fetchedCharacters","results","prevCharacters","next","prevPageNumber","console","log","message","useEffect","dataLength","hasMore","loader","path","SearchBarInput","input","SearchBar","setSearchQuery","currentQuery","setCurrentQuery","saveCahnges","useCallback","debounce","nextValue","type","onChange","target","value","placeholder","CharactersCatalogue","setFilmList","isLoading","setIsLoading","mapFilm","filmData","characterIdList","characterLink","match","id","episode_id","director","producer","releaseDate","release_date","getFilmList","filmsMapped"],"mappings":"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","file":"static/js/4.4e1ef36c.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ElementBox = styled.div`\r\n  color: rgb(170, 170, 170);\r\n  height: 200px;\r\n  /* max-width: 400px; */\r\n  min-width: 250px;\r\n  width:auto;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  justify-content: center;\r\n  display: flex;\r\n  list-style-type: none;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n\r\n  background: rgba(255, 255, 255, 0.2);\r\n  box-shadow: 0 8px 32px 0 rgba(100, 100, 100, 0.1);\r\n  backdrop-filter: blur(14px);\r\n  -webkit-backdrop-filter: blur(14px);\r\n  border-radius: 0.4em;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nexport const CustomLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #ffc500;\r\n  padding: 30px 50px 0 50px;\r\n`;\r\n","import React from 'react';\r\nimport { ElementBox, CustomLink } from './characterListElement.css';\r\n\r\nconst CharacterListElement = ({ characterData }) => {\r\n  return (\r\n    <ElementBox>\r\n      <h1 style={{ color: 'white' }}>{characterData.name}</h1>\r\n      <p>Gender: {characterData.gender}</p>\r\n      <p>Birth Year: {characterData.birthYear}</p>\r\n\r\n      <CustomLink to={`/characters/${characterData.index}`}>\r\n        Read more\r\n      </CustomLink>\r\n    </ElementBox>\r\n  );\r\n};\r\n\r\nexport default CharacterListElement;\r\n","import styled from 'styled-components';\r\n\r\nexport const ListWrapper = styled.div`\r\n    justify-content: center;\r\n    /* display: flex;   */\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ModalWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  z-index: 101;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 101;\r\n  width: calc(100vw - 5em);\r\n  height: calc(100vh - 5em);\r\n  max-width: 1000px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  gap: 10px;\r\n  font-size: 1.1em;\r\n\r\n  background-color: rgba(100, 100, 100, 0.7);\r\n  box-shadow: 0 8px 32px 0 rgba(100, 100, 100, 0.1);\r\n  backdrop-filter: blur(14px);\r\n  -webkit-backdrop-filter: blur(14px);\r\n  border-radius: 0.4em;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nexport const ModalHeader = styled.header`\r\n  text-align: right;\r\n  padding: 10px;\r\n  color: #aaa;\r\n`;\r\n\r\nexport const Line = styled.div`\r\n  width: 25px;\r\n  height: 3px;\r\n  background-color: white;\r\n  margin: 5px;\r\n  -webkit-transition: all 0.5s ease;\r\n  transition: all 0.5s ease;\r\n`;\r\n\r\nexport const ExitIcon = styled.div`\r\n  cursor: pointer;\r\n  display: block;\r\n  margin-left: auto;\r\n  padding: 10px;\r\n  ${Line}:nth-child(1) {\r\n    transform: rotate(-45deg) translate(-5px, 6px);\r\n  }\r\n\r\n  ${Line}:nth-child(2) {\r\n    opacity: 0;\r\n    transform: translateX(20px);\r\n  }\r\n  ${Line}:nth-child(3) {\r\n    transform: rotate(45deg) translate(-5px, -6px);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n  ModalWrapper,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ExitIcon,\r\n  Line,\r\n} from './modal.css';\r\n\r\nconst Modal = ({ children }) => {\r\n  const history = useHistory();\r\n\r\n  const handleCloseModal = (e) => {\r\n    e.stopPropagation();\r\n    history.goBack();\r\n  };\r\n\r\n  return createPortal(\r\n    <ModalWrapper onClick={handleCloseModal}>\r\n      <ModalContent onClick={(e) => e.stopPropagation()}>\r\n        <ModalHeader>\r\n          <button\r\n            onClick={handleCloseModal}\r\n            style={{\r\n              backgroundColor: 'transparent',\r\n              padding: 0,\r\n              border: 'none',\r\n              background: 'none',\r\n            }}>\r\n            <ExitIcon>\r\n              <Line></Line>\r\n              <Line></Line>\r\n              <Line></Line>\r\n            </ExitIcon>\r\n          </button>\r\n        </ModalHeader>\r\n        {children}\r\n      </ModalContent>\r\n    </ModalWrapper>,\r\n    document.getElementById('modal')\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const CharacterDetailsWrapper = styled.div`\r\n  color: rgb(170, 170, 170);\r\n\r\n  & > hr {\r\n    color: rgb(170, 170, 170);\r\n  }\r\n`;\r\n","import React, { useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { CharacterDetailsWrapper } from './characterDetails.css';\r\n\r\nconst CharacterDetails = ({ characters, allFilmList }) => {\r\n  const { index } = useParams();\r\n\r\n  const characterData = useMemo(\r\n    () => characters.find((character) => character.index === Number(index)),\r\n    [characters, index]\r\n  );\r\n\r\n  const movieList = useMemo(\r\n    () =>\r\n      allFilmList && characterData\r\n        ? characterData.filmList.map((characterFilmURL) =>\r\n            allFilmList.find((film) => film.url === characterFilmURL)\r\n          )\r\n        : [],\r\n    [allFilmList, characterData]\r\n  );\r\n\r\n  return (\r\n    <CharacterDetailsWrapper>\r\n      <h1 style={{ color: 'white' }}>{characterData.name}</h1>\r\n      <hr />\r\n      <br />\r\n      <p>Gender: {characterData.gender}</p>\r\n      <p>Birth Year: {characterData.birthYear}</p>\r\n      <p>Height: {characterData.height}</p>\r\n      <p>Eye Color: {characterData.eyeColor}</p>\r\n      <p>Hair Color: {characterData.hairColor}</p>\r\n      <p>Skin Color: {characterData.skinColor}</p>\r\n      <br />\r\n      <hr />\r\n      <br />\r\n      <h3 style={{ color: 'white' }}>Film lsit:</h3>\r\n      <br />\r\n      {movieList.map((movie, index) => (\r\n        <p key={index}>{movie ? movie.title : ''}</p>\r\n      ))}\r\n    </CharacterDetailsWrapper>\r\n  );\r\n};\r\n\r\nexport default CharacterDetails;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport { Loader } from 'components';\r\n\r\nimport CharacterListElement from './CharacterListElement';\r\nimport { ListWrapper } from './characterList.css';\r\n\r\nimport { Modal } from '../Modal';\r\nimport { CharacterDetails } from '../CharacterDetails';\r\n\r\nconst CharacterList = ({\r\n  searchQuery,\r\n  pageNumber,\r\n  setPageNumber,\r\n  allFilmList,\r\n}) => {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [hasMoreCharacters, setHasMoreCharacters] = useState(false);\r\n\r\n  const mapCharacter = (character, index) => {\r\n    return {\r\n      name: character.name,\r\n      gender: character.gender,\r\n      birthYear: character.birth_year,\r\n      eyeColor: character.eye_color,\r\n      hairColor: character.hair_color,\r\n      skinColor: character.skin_color,\r\n      height: character.height,\r\n      filmList: character.films,\r\n      index: characters.length + index,\r\n    };\r\n  };\r\n\r\n  const getMoreCharacters = async (nextPage, query) => {\r\n    try {\r\n      const { data } = await axios.get('https://swapi.dev/api/people/', {\r\n        params: { search: query, page: nextPage },\r\n      });\r\n\r\n      const fetchedCharacters = data.results.map(mapCharacter);\r\n\r\n      setCharacters((prevCharacters) => [\r\n        ...prevCharacters,\r\n        ...fetchedCharacters,\r\n      ]);\r\n\r\n      if (data.next !== null) {\r\n        setHasMoreCharacters(true);\r\n        setPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n      } else {\r\n        setHasMoreCharacters(false);\r\n      }\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCharacters([]);\r\n    getMoreCharacters(pageNumber, searchQuery);\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <InfiniteScroll\r\n        dataLength={characters.length}\r\n        next={() => getMoreCharacters(pageNumber, searchQuery)}\r\n        hasMore={hasMoreCharacters}\r\n        loader={<Loader />}>\r\n        {characters.map((character) => (\r\n          <CharacterListElement\r\n            characterData={character}\r\n            key={character.index}\r\n          />\r\n        ))}\r\n      </InfiniteScroll>\r\n\r\n      <Switch>\r\n        <Route path=\"/characters/:index\">\r\n          <Modal>\r\n            <CharacterDetails\r\n              characters={characters}\r\n              allFilmList={allFilmList}\r\n            />\r\n          </Modal>\r\n        </Route>\r\n      </Switch>\r\n    </ListWrapper>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchBarInput = styled.input`\r\n  color: rgb(170, 170, 170);\r\n  min-width: 250px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  gap: 10px;\r\n\r\n  background: rgba(255, 255, 255, 0.2);\r\n  box-shadow: 0 8px 32px 0 rgba(100, 100, 100, 0.1);\r\n  backdrop-filter: blur(14px);\r\n  -webkit-backdrop-filter: blur(14px);\r\n  border-radius: 1.4em;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { SearchBarInput } from './searchBar.css';\r\n\r\nconst SearchBar = ({ setSearchQuery, setPageNumber }) => {\r\n  const [currentQuery, setCurrentQuery] = useState('');\r\n\r\n  const saveCahnges = useCallback(\r\n    debounce((nextValue) => {\r\n      setPageNumber(1);\r\n      setSearchQuery(nextValue);\r\n    }, 1000),\r\n    []\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setCurrentQuery(e.target.value);\r\n    saveCahnges(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBarInput\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        value={currentQuery}\r\n        placeholder=\"Search...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Loader } from 'components';\r\n\r\nimport { CharacterList } from './components/CharacterList';\r\nimport { SearchBar } from './components/SearchBar';\r\n\r\n\r\nconst CharactersCatalogue = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [filmList, setFilmList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n  const mapFilm = (filmData) => {\r\n    const characterIdList = filmData.characters.map((characterLink) =>\r\n      characterLink.match(/\\d+/g).map(Number)\r\n    );\r\n\r\n    return {\r\n      title: filmData.title,\r\n      id: filmData.episode_id,\r\n      director: filmData.director,\r\n      producer: filmData.producer,\r\n      releaseDate: filmData.release_date,\r\n      url: filmData.url,\r\n      characterIdList,\r\n    };\r\n  };\r\n\r\n  const getFilmList = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const { data : { results } = [] } = await axios.get('https://swapi.dev/api/films/');\r\n\r\n      const filmsMapped = results.map(mapFilm);\r\n      setFilmList(filmsMapped);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFilmList();\r\n  }, []);\r\n  \r\n  if (isLoading) return <Loader/>;\r\n\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        setSearchQuery={setSearchQuery}\r\n        setPageNumber={setPageNumber}\r\n      />\r\n      <CharacterList\r\n        searchQuery={searchQuery}\r\n        pageNumber={pageNumber}\r\n        setPageNumber={setPageNumber}\r\n        allFilmList={filmList}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharactersCatalogue;\r\n"],"sourceRoot":""}